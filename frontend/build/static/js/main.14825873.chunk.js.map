{"version":3,"sources":["CountyMap/Marks.js","CountyMap/index.js","HistogramChart/AxisBottom.js","HistogramChart/AxisLeft.js","HistogramChart/Marks.js","HistogramChart/TimeChart.js","useCovidData.js","ToolTip.js","GeospatialChart.js","useGeoData.js","App.js","index.js"],"names":["projection","geoAlbersUsa","translate","scale","path","geoPath","Marks","data","rowByCounty","onHover","hoveredValue","fadeOpacity","colorScale","colorValue","useMemo","features","map","feature","i","className","onMouseEnter","properties","county","onMouseOut","opacity","fill","get","d","CountyMap","covidData","onHoveredValue","useState","setHoveredValue","fullyvaccinatedcumulative","scaleSequential","interpolateYlGn","domain","max","useEffect","AxisBottom","xScale","innerHeight","tickFormat","tickOffset","ticks","tickValue","transform","y2","style","textAnchor","dy","y","AxisLeft","yScale","left","innerWidth","x2","x","binnedData","tooltipFormat","x0","width","x1","height","margin","TimeChart","setBrushExtent","xValue","brushRef","useRef","yValue","xAxisTickFormat","timeFormat","scaleTime","extent","range","nice","start","stop","bin","value","thresholds","timeDays","array","sum","scaleLinear","brush","brushX","select","current","on","event","selection","invert","circleRadius","ref","useCovidData","setData","axios","then","response","results","rows","p","vaccination_date","Date","ToolTip","hoveredData","mousePosition","styles","top","colSpan","fullyvaccinated","atleastonedosecumulative","atleastonedose","GeospatialChart","json","topology","MarylandCountyBoundary","objects","useGeoData","setMousePosition","brushExtent","handleMouseMove","useCallback","clientX","clientY","getDate","inDate","date","year","getFullYear","month","getMonth","dt","filteredData","filter","Map","forEach","set","onMouseMove","dateHistogramSize","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14825873.chunk.js","sourcesContent":["import { useMemo } from 'react';\r\nimport { geoAlbersUsa, geoPath } from 'd3';\r\nconst projection = geoAlbersUsa().translate([-3330, 800]).scale([15000]);\r\nconst path = geoPath(projection);\r\nconst missingDataColor = 'grey';\r\n\r\nexport const Marks = ({\r\n  data,\r\n  rowByCounty,\r\n  onHover,\r\n  hoveredValue,\r\n  fadeOpacity,\r\n  colorScale,\r\n  colorValue,\r\n}) => (\r\n  <>\r\n    {useMemo(\r\n      () =>\r\n        data.features.map((feature, i) => (\r\n          <g\r\n            key={i}\r\n            className=\"geomarks\"\r\n            onMouseEnter={() => {\r\n              onHover(feature.properties.county);\r\n            }}\r\n            onMouseOut={() => {\r\n              onHover(null);\r\n            }}\r\n            opacity={\r\n              hoveredValue && feature.properties.county === hoveredValue\r\n                ? fadeOpacity\r\n                : 1\r\n            }\r\n          >\r\n            <path\r\n              fill={\r\n                rowByCounty.get(feature.properties.county)\r\n                  ? colorScale(\r\n                      colorValue(rowByCounty.get(feature.properties.county))\r\n                    )\r\n                  : missingDataColor\r\n              }\r\n              d={path(feature)}\r\n            />\r\n          </g>\r\n        )),\r\n      [\r\n        rowByCounty,\r\n        colorScale,\r\n        colorValue,\r\n        hoveredValue,\r\n        data.features,\r\n        fadeOpacity,\r\n        onHover,\r\n      ]\r\n    )}\r\n  </>\r\n);\r\n","import React, { useMemo, useState, useEffect } from 'react';\r\nimport { Marks } from './Marks';\r\nimport { interpolateYlGn, scaleSequential, max } from 'd3';\r\n\r\nconst fadeOpacity = 0.4;\r\n\r\nexport const CountyMap = ({ data, covidData, rowByCounty, onHoveredValue }) => {\r\n  const [hoveredValue, setHoveredValue] = useState(null);\r\n  const colorValue = (d) => +d.fullyvaccinatedcumulative;\r\n  const colorScale = useMemo(\r\n    () =>\r\n      scaleSequential(interpolateYlGn).domain([0, max(covidData, colorValue)]),\r\n    [covidData, colorValue]\r\n  );\r\n\r\n  useEffect(() => {\r\n    onHoveredValue(hoveredValue);\r\n  }, [hoveredValue]);\r\n\r\n  return (\r\n    <Marks\r\n      data={data}\r\n      rowByCounty={rowByCounty}\r\n      onHover={setHoveredValue}\r\n      hoveredValue={hoveredValue}\r\n      fadeOpacity={fadeOpacity}\r\n      colorScale={colorScale}\r\n      colorValue={colorValue}\r\n    />\r\n  );\r\n};\r\n","import { useMemo } from 'react';\r\n\r\nexport const AxisBottom = ({\r\n  xScale,\r\n  innerHeight,\r\n  tickFormat,\r\n  tickOffset = 3,\r\n}) => (\r\n  <>\r\n    {useMemo(\r\n      () =>\r\n        xScale.ticks().map((tickValue) => (\r\n          <g\r\n            className=\"tick\"\r\n            key={tickValue}\r\n            transform={`translate(${xScale(tickValue)},0)`}\r\n          >\r\n            <line y2={innerHeight} />\r\n            <text\r\n              style={{ textAnchor: 'middle' }}\r\n              dy=\".71em\"\r\n              y={innerHeight + tickOffset}\r\n            >\r\n              {tickFormat(tickValue)}\r\n            </text>\r\n          </g>\r\n        )),\r\n      [xScale, innerHeight, tickFormat, tickOffset]\r\n    )}\r\n  </>\r\n);\r\n","import { useMemo } from 'react';\r\n\r\nexport const AxisLeft = ({ yScale, left, innerWidth, tickOffset = 3 }) => (\r\n  <>\r\n    {useMemo(\r\n      () =>\r\n        yScale.ticks(5).map((tickValue) => (\r\n          <g\r\n            key={tickValue}\r\n            className=\"tick\"\r\n            transform={`translate(${left},${yScale(tickValue)})`}\r\n          >\r\n            <line x2={innerWidth} />\r\n            <text style={{ textAnchor: 'end' }} x={-tickOffset} dy=\"0.32em\">\r\n              {tickValue}\r\n            </text>\r\n          </g>\r\n        )),\r\n      [yScale, left, innerWidth, tickOffset]\r\n    )}\r\n  </>\r\n);\r\n","import { useMemo } from 'react';\r\n\r\nexport const Marks = ({\r\n  binnedData,\r\n  xScale,\r\n  yScale,\r\n  tooltipFormat,\r\n  innerHeight,\r\n}) => (\r\n  <>\r\n    {useMemo(\r\n      () =>\r\n        binnedData.map((d) => (\r\n          <rect\r\n            key={d.x0}\r\n            className=\"mark\"\r\n            x={xScale(d.x0)}\r\n            y={yScale(d.y)}\r\n            width={xScale(d.x1) - xScale(d.x0)}\r\n            height={innerHeight - yScale(d.y)}\r\n          >\r\n            <title>{tooltipFormat(d.y)}</title>\r\n          </rect>\r\n        )),\r\n      [binnedData, xScale, yScale, tooltipFormat, innerHeight]\r\n    )}\r\n  </>\r\n);\r\n","import { useRef, useEffect, useMemo } from 'react';\r\nimport {\r\n  scaleLinear,\r\n  scaleTime,\r\n  max,\r\n  timeFormat,\r\n  extent,\r\n  bin,\r\n  timeDays,\r\n  sum,\r\n  brushX,\r\n  select,\r\n} from 'd3';\r\n\r\nimport { AxisBottom } from './AxisBottom';\r\nimport { AxisLeft } from './AxisLeft';\r\nimport { Marks } from './Marks';\r\n\r\nconst margin = { top: 10, right: 0, bottom: 65, left: 100 };\r\nconst xAxisLabelOffset = 45;\r\nconst yAxisLabelOffset = 75;\r\n\r\nconst TimeChart = ({ data, width, height, setBrushExtent, xValue }) => {\r\n  const brushRef = useRef();\r\n\r\n  const xAxisLabel = 'Date';\r\n\r\n  const innerHeight = height - margin.top - margin.bottom;\r\n  const innerWidth = width - margin.left - margin.right;\r\n\r\n  const yValue = (d) => d['fullyvaccinatedcumulative'];\r\n  const yAxisLabel = 'Cumulative';\r\n\r\n  const xAxisTickFormat = timeFormat('%m/%d/%Y');\r\n\r\n  const xScale = useMemo(\r\n    () =>\r\n      scaleTime()\r\n        .domain(extent(data, xValue))\r\n        .range([margin.left, width])\r\n        .nice(),\r\n    [data, xValue, width]\r\n  );\r\n\r\n  const binnedData = useMemo(() => {\r\n    const [start, stop] = xScale.domain();\r\n    return bin()\r\n      .value(xValue)\r\n      .domain(xScale.domain())\r\n      .thresholds(timeDays(start, stop))(data)\r\n      .map((array) => ({\r\n        y: sum(array, yValue),\r\n        x0: array.x0,\r\n        x1: array.x1,\r\n      }));\r\n  }, [xValue, yValue, xScale, data]);\r\n\r\n  const yScale = useMemo(\r\n    () =>\r\n      scaleLinear()\r\n        .domain([0, max(binnedData, (d) => d.y)])\r\n        .range([innerHeight, 0]),\r\n    [binnedData, innerHeight]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const brush = brushX().extent([\r\n      [margin.left, margin.top],\r\n      [width, innerHeight + margin.top],\r\n    ]);\r\n    brush(select(brushRef.current));\r\n\r\n    brush.on('brush end', (event) => {\r\n      setBrushExtent(event.selection && event.selection.map(xScale.invert));\r\n    });\r\n  }, [innerWidth, innerHeight, setBrushExtent, width, xScale.invert]);\r\n\r\n  return (\r\n    <svg width={width} height={height}>\r\n      <g transform={`translate(0,${margin.top})`}>\r\n        <AxisBottom\r\n          xScale={xScale}\r\n          innerHeight={innerHeight}\r\n          tickFormat={xAxisTickFormat}\r\n          tickOffset={7}\r\n        />\r\n        <text\r\n          className=\"axis-label\"\r\n          textAnchor=\"middle\"\r\n          transform={`translate(${-yAxisLabelOffset + margin.left}, ${\r\n            innerHeight / 2\r\n          }) rotate(-90)`}\r\n        >\r\n          {yAxisLabel}\r\n        </text>\r\n\r\n        <AxisLeft\r\n          yScale={yScale}\r\n          left={margin.left}\r\n          innerWidth={innerWidth}\r\n          tickOffset={7}\r\n        />\r\n        <text\r\n          className=\"axis-label\"\r\n          x={innerWidth / 2}\r\n          y={innerHeight + xAxisLabelOffset}\r\n          textAnchor=\"middle\"\r\n        >\r\n          {xAxisLabel}\r\n        </text>\r\n        <Marks\r\n          binnedData={binnedData}\r\n          xScale={xScale}\r\n          yScale={yScale}\r\n          tooltipFormat={(d) => d}\r\n          circleRadius={2}\r\n          innerHeight={innerHeight}\r\n        />\r\n      </g>\r\n      <g ref={brushRef} />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default TimeChart;\r\n","import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst row2 = (d) => {\r\n  d.map((p) => {\r\n    p.vaccination_date = new Date(p.vaccination_date);\r\n    p.fullyvaccinatedcumulative = +p.fullyvaccinatedcumulative;\r\n  });\r\n  return d;\r\n};\r\n\r\nexport const useCovidData = () => {\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/v1/mdcovidvac').then((response) => {\r\n      setData(row2(response.data.results.rows));\r\n    });\r\n  }, []);\r\n\r\n  return data;\r\n};\r\n","import React, { useMemo } from 'react';\r\n\r\nexport const ToolTip = ({ hoveredValue, hoveredData, mousePosition }) => {\r\n  const styles = {\r\n    left: `${mousePosition.x}px`,\r\n    top: `${mousePosition.y}px`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"Tooltip\" style={styles}>\r\n      {useMemo(\r\n        () => (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th colSpan=\"2\">{hoveredValue} County</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td colSpan=\"1\">Fully Vaccinated Cumulative</td>\r\n                <td colSpan=\"1\">\r\n                  {hoveredData && hoveredData.fullyvaccinatedcumulative\r\n                    ? hoveredData.fullyvaccinatedcumulative\r\n                    : 'No Data'}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"1\">Fully Vaccinated Today</td>\r\n                <td colSpan=\"1\">\r\n                  {hoveredData && hoveredData.fullyvaccinated\r\n                    ? hoveredData.fullyvaccinated\r\n                    : 'No Data'}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"1\">At Least One Dose Cumulative</td>\r\n                <td colSpan=\"1\">\r\n                  {hoveredData && hoveredData.atleastonedosecumulative\r\n                    ? hoveredData.atleastonedosecumulative\r\n                    : 'No Data'}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"1\">At Least One Dose Today</td>\r\n                <td colSpan=\"1\">\r\n                  {hoveredData && hoveredData.atleastonedose\r\n                    ? hoveredData.atleastonedose\r\n                    : 'No Data'}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        ),\r\n        [hoveredData, hoveredValue]\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useCallback } from 'react';\r\n\r\nimport { CountyMap } from './CountyMap';\r\nimport TimeChart from './HistogramChart/TimeChart';\r\n\r\nimport { useGeoData } from './useGeoData';\r\nimport { useCovidData } from './useCovidData';\r\n\r\nimport { ToolTip } from './ToolTip';\r\n\r\nconst width = 1100;\r\nconst height = 700;\r\nconst dateHistogramSize = 0.25;\r\nconst xValue = (d) => d['vaccination_date'];\r\nconst startDate = '12/14/2021 10:00:00 AM';\r\nconst endDate = '06/11/2021 10:00:00 AM';\r\n\r\nconst GeospatialChart = () => {\r\n  const data = useGeoData();\r\n  const covidData = useCovidData();\r\n  const [hoveredValue, setHoveredValue] = useState(null);\r\n  const [mousePosition, setMousePosition] = useState(null);\r\n\r\n  const [brushExtent, setBrushExtent] = useState();\r\n\r\n  const handleMouseMove = useCallback(\r\n    (event) => {\r\n      const { clientX, clientY } = event;\r\n      setMousePosition({ x: clientX, y: clientY });\r\n    },\r\n    [setMousePosition]\r\n  );\r\n\r\n  const getDate = (inDate) => {\r\n    const date = new Date(inDate);\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let dt = date.getDate();\r\n\r\n    if (dt < 10) {\r\n      dt = '0' + dt;\r\n    }\r\n    if (month < 10) {\r\n      month = '0' + month;\r\n    }\r\n\r\n    return year + '-' + month + '-' + dt;\r\n  };\r\n\r\n  if (!data || !covidData) {\r\n    return <pre>Loading...</pre>;\r\n  }\r\n\r\n  const filteredData = brushExtent\r\n    ? covidData.filter((d) => {\r\n        const date = xValue(d);\r\n\r\n        return date > brushExtent[0] && date < brushExtent[1];\r\n      })\r\n    : covidData;\r\n\r\n  const rowByCounty = new Map();\r\n\r\n  filteredData.forEach((d) => {\r\n    rowByCounty.set(d.county, d);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <svg\r\n        className=\"mapbg\"\r\n        width={width}\r\n        height={height}\r\n        onMouseMove={handleMouseMove}\r\n      >\r\n        <CountyMap\r\n          data={data}\r\n          covidData={covidData}\r\n          rowByCounty={rowByCounty}\r\n          onHoveredValue={setHoveredValue}\r\n        />\r\n      </svg>\r\n      <h2 className=\"headerText\">Maryland Covid 19 Vaccination by County</h2>\r\n      <h3 className=\"dateText\">\r\n        Date: {brushExtent ? getDate(brushExtent[0]) : getDate(startDate)} to{' '}\r\n        {brushExtent ? getDate(brushExtent[1]) : getDate(endDate)}\r\n      </h3>\r\n\r\n      <TimeChart\r\n        data={covidData}\r\n        width={width}\r\n        height={dateHistogramSize * height}\r\n        xValue={xValue}\r\n        setBrushExtent={setBrushExtent}\r\n      />\r\n\r\n      {hoveredValue ? (\r\n        <ToolTip\r\n          hoveredValue={hoveredValue}\r\n          hoveredData={rowByCounty.get(hoveredValue)}\r\n          mousePosition={mousePosition}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GeospatialChart;\r\n","import { useState, useEffect } from 'react';\r\nimport { json } from 'd3';\r\nimport { feature } from 'topojson';\r\n\r\nconst jsonUrl =\r\n  'https://gist.githubusercontent.com/di-qian/c990854620364f452311ade8e15db0a3/raw/0912547deeff4b88ece5caf4fe5628c717c41794/mdcountyshape.json';\r\n\r\nexport const useGeoData = () => {\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    json(jsonUrl).then((topology) => {\r\n      const { MarylandCountyBoundary } = topology.objects;\r\n      setData(feature(topology, MarylandCountyBoundary));\r\n    });\r\n  }, []);\r\n\r\n  return data;\r\n};\r\n","import React from 'react';\n\nimport GeospatialChart from './GeospatialChart';\n\nfunction App() {\n  return (\n    <>\n      <GeospatialChart />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}